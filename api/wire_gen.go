// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"app/cmd"
	"app/connect"
	"app/handler"
	"app/middleware"
	"app/provider"
	"app/provider/repo"
	"app/router"
	"github.com/google/wire"
	"github.com/urfave/cli/v2"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func Initialize() cli.Commands {
	db := connect.NewDB()
	comment := repo.NewComment(db)
	article := repo.NewArticle(db, comment)
	setting := repo.NewSetting(db)
	handlerArticle := handler.NewArticle(db, article, setting)
	cate := repo.NewCate(db)
	handlerCate := handler.NewCate(db, cate)
	handlerComment := handler.NewComment()
	common := handler.NewCommon()
	link := repo.NewLink(db)
	handlerLink := handler.NewLink(db, link)
	user := repo.NewUser(db)
	handlerUser := handler.NewUser(db, user)
	mood := repo.NewMood(db)
	handlerMood := handler.NewMood(db, mood)
	remind := repo.NewRemind(db)
	handlerRemind := handler.NewRemind(db, remind)
	handlerSetting := handler.NewSetting(db, setting)
	handlerHandler := &handler.Handler{
		Article: handlerArticle,
		Cate:    handlerCate,
		Comment: handlerComment,
		Common:  common,
		Link:    handlerLink,
		User:    handlerUser,
		Mood:    handlerMood,
		Remind:  handlerRemind,
		Setting: handlerSetting,
	}
	accessLogger := connect.NewAccessLogger()
	accessLog := middleware.NewAccessLog(accessLogger)
	middlewareRecover := middleware.NewRecover()
	cors := middleware.NewCors()
	limiter := connect.NewRateLimiter()
	middlewareLimiter := middleware.NewLimiter(limiter)
	remindAuth := middleware.NewRemindAuth()
	authLogin := middleware.NewAuthLogin()
	middlewareMiddleware := &middleware.Middleware{
		AccessLog:  accessLog,
		Recover:    middlewareRecover,
		Cors:       cors,
		Limiter:    middlewareLimiter,
		RemindAuth: remindAuth,
		AuthLogin:  authLogin,
	}
	routerRouter := router.NewRouter(handlerHandler, middlewareMiddleware)
	httpCmd := cmd.NewHttp(routerRouter)
	installCmd := cmd.NewInstallCmd()
	commands := &cmd.Commands{
		HttpCmd:    httpCmd,
		InstallCmd: installCmd,
	}
	cliCommands := cmd.NewCommands(commands)
	return cliCommands
}

// wire.go:

var providerSet = wire.NewSet(connect.ProviderSet, cmd.ProviderSet, router.ProviderSet, middleware.ProviderSet, handler.ProviderSet, provider.RepoSet)
